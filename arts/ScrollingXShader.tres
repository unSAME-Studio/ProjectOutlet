[gd_resource type="VisualShader" load_steps=12 format=2]

[ext_resource path="res://arts/outlet_uv_error.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "alpha"

[sub_resource type="VisualShaderNodeVectorOp" id=19]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=15]

[sub_resource type="VisualShaderNodeScalarUniform" id=17]
uniform_name = "Opacity"

[sub_resource type="VisualShaderNodeColorConstant" id=21]

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;
uniform float Opacity;



void vertex() {
// Output:0

}

void fragment() {
// Color:9
	vec3 n_out9p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out9p1 = 1.000000;

// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// Input:4
	float n_out4p0 = TIME;

// ScalarOp:5
	float n_in5p1 = 0.20000;
	float n_out5p0 = n_out4p0 * n_in5p1;

// VectorOp:6
	vec3 n_out6p0 = n_out3p0 + vec3(n_out5p0);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out6p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarUniform:8
	float n_out8p0 = Opacity;

// VectorOp:11
	vec3 n_out11p0 = n_out2p0 * vec3(n_out8p0);

// VectorOp:12
	vec3 n_out12p0 = n_out9p0 * n_out11p0;

// Input:10
	float n_out10p0 = COLOR.a;

// Output:0
	COLOR.rgb = n_out12p0;
	COLOR.a = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -272.324, 104.401 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 560, 160 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( -80, 40 )
nodes/fragment/3/node = SubResource( 10 )
nodes/fragment/3/position = Vector2( -560, 140 )
nodes/fragment/4/node = SubResource( 11 )
nodes/fragment/4/position = Vector2( -680, 300 )
nodes/fragment/5/node = SubResource( 14 )
nodes/fragment/5/position = Vector2( -460, 280 )
nodes/fragment/6/node = SubResource( 15 )
nodes/fragment/6/position = Vector2( -280, 140 )
nodes/fragment/8/node = SubResource( 17 )
nodes/fragment/8/position = Vector2( -80, 280 )
nodes/fragment/9/node = SubResource( 21 )
nodes/fragment/9/position = Vector2( -40, -80 )
nodes/fragment/10/node = SubResource( 18 )
nodes/fragment/10/position = Vector2( 240, 340 )
nodes/fragment/11/node = SubResource( 19 )
nodes/fragment/11/position = Vector2( 120, 160 )
nodes/fragment/12/node = SubResource( 20 )
nodes/fragment/12/position = Vector2( 340, 20 )
nodes/fragment/connections = PoolIntArray( 5, 0, 6, 1, 6, 0, 2, 0, 4, 0, 5, 0, 3, 0, 6, 0, 10, 0, 0, 1, 2, 0, 11, 0, 8, 0, 11, 1, 9, 0, 12, 0, 11, 0, 12, 1, 12, 0, 0, 0 )
